Kivy Google Drive
==================

This is a barebones codebase that enables accessing Google Drive using the Kivy framework. In kivy, authenticating through the users' Google accounts for access to Google services using oauth2 on mobile platforms can be challenging. In particular, code that works on desktop can often fail on mobile. 

Why does this happen? One culprit appears to be that there is a unit test in the iri2uri.py module needed by httplib2 that is named '__main__', which the various kivy tools for mobile (buildozer, p4a etc...) flag and decide to not prepare a pyo for iri2uri. This has a downstream effect that causes apps to crash on mobile platforms. Thus, the unit test was removed from the iri2uri.py in this codebase.

The directory GoogleNetworking includes the relevant python code from the respective repositories as of Feb 2017.

The codebase used here is for Google Drive, but it should generalize to other Google services.

All the code is based on google's native python library for installed applications. The idea is to keep the codebase consistent across desktop and mobile platforms. This does not require a separate Android/iOS workflow using Google Sign-in.

For now, this is released under the Creative Commons BY-NC-SA license, but this will likely change in the future.

Basic workflow
----------------------------------

#. Register your client secrets for your app: https://developers.google.com/api-client-library/python/guide/aaa_client_secrets

#. Download this code base

#. Modify the lines 
    * OAUTH2_CLIENT_ID = INSERT_CLIENT_ID_HERE
    * OAUTH2_CLIENT_SECRET = INSERT_CLLIENT_SECRET_HERE
    * in google_drive_handler.py based on the client_secrets.json file generated by google.
    
#. The code will run readily on the desktop 

#. To run the app on an Android device from Ubuntu:

    * Follow the instructions of the old toolchain for python-for-android from: http://python-for-android.readthedocs.io/en/latest/old_toolchain/toolchain

    * In particular, ensure the Android build environment is set correctly in the terminal:

    ``$export ANDROIDSDK=/PATH/TO/ANDROID-SDK-LINUX``
    
    ``$export ANDROIDNDK=/PATH/TO/ANDROID-NDK-R10E``
    
    ``$export ANDROIDNDKVER=r10e``
    
    ``$export ANDROIDAPI=14``
    
    ``$export PATH=$ANDROIDNDK:$ANDROIDSDK/platform-tools:$ANDROIDSDK/tools:$PATH``
    
    * Make sure you update to a recent version of Cython via pip
    
    ``$sudo pip install --upgrade Cython``
    
    * On 64-bit machines, make sure you perform the following so you have the needed tools:
    
    ``$sudo dpkg --add-architecture i386``
    
    ``$sudo apt-get update``
    
    ``$sudo apt-get install -y build-essential ccache git zlib1g-dev python2.7 python2.7-dev libncurses5:i386 libstdc++6:i386 zlib1g:i386 openjdk-7-jdk unzip ant``
    
    * Navigate to your local python-for-android repository
    
    ``$cd /PATH/TO/PYTHON_FOR_ANDROID/``
    
    ``$git clean -dexf``
    
    ``$git pull``
    
    ``$git checkout old_toolchain``
    
    * Create the distribution including openssl
    
    ``$./distribute.sh -m "openssl kivy"``
    
    * Navigate to the ``dist/default`` directory
    
    * Create the Android executable. For a debug version:
    
    ``./build.py --dir /PATH/TO/LOCAL/REPOSITORY/ \``
    
    ``--package org.test \``
    
    ``--name "DriveTest" --version 0.0.1 \``
    
    ``--permission INTERNET debug installd``
